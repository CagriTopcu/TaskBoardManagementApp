{
  "x-generator": "NSwag v13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "TaskBoardManagementApp API",
    "version": "1.0.0"
  },
  "paths": {
    "/api/Issues": {
      "get": {
        "tags": [
          "Issues"
        ],
        "operationId": "Issues_GetList",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Issues"
        ],
        "operationId": "Issues_Add",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateIssueCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Issues"
        ],
        "operationId": "Issues_Update",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateIssueCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Issues"
        ],
        "operationId": "Issues_Delete",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteIssueCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Issues/{id}": {
      "get": {
        "tags": [
          "Issues"
        ],
        "operationId": "Issues_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateIssueCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "projectId": {
            "type": "string",
            "format": "guid"
          },
          "assigneeId": {
            "type": "string",
            "format": "guid"
          },
          "reporterId": {
            "type": "string",
            "format": "guid"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string"
          },
          "types": {
            "$ref": "#/components/schemas/IssueType"
          },
          "status": {
            "$ref": "#/components/schemas/IssueStatus"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "IssueType": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Epic",
          "Story",
          "Task",
          "Bug"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ]
      },
      "IssueStatus": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Todo",
          "InProgress",
          "Review",
          "Done"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ]
      },
      "UpdateIssueCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "projectId": {
            "type": "string",
            "format": "guid"
          },
          "assigneeId": {
            "type": "string",
            "format": "guid"
          },
          "reporterId": {
            "type": "string",
            "format": "guid"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string"
          },
          "types": {
            "$ref": "#/components/schemas/IssueType"
          },
          "status": {
            "$ref": "#/components/schemas/IssueStatus"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "DeleteIssueCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          }
        }
      }
    },
    "securitySchemes": {
      "JWT": {
        "type": "apiKey",
        "description": "Type into the textbox: Bearer {your JWT token}.",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "JWT": []
    }
  ]
}